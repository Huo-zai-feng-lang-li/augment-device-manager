
// Êô∫ËÉΩÊ∏ÖÁêÜÊ®°ÂºèÊµãËØï
const testIntelligentCleanup = async () => {
  console.log("üß† ÊµãËØïÊô∫ËÉΩÊ∏ÖÁêÜÊ®°ÂºèÂèÇÊï∞...");
  
  // Ê®°ÊãüÊô∫ËÉΩÊ∏ÖÁêÜÊ®°ÂºèÁöÑÂèÇÊï∞
  const intelligentOptions = {
    preserveActivation: true,
    deepClean: false,
    cleanCursorExtension: false, // ÂÖ≥ÈîÆÔºö‰∏çÂ∫îËØ•Ê∏ÖÁêÜÊâ©Â±ï
    autoRestartCursor: false,    // ÂÖ≥ÈîÆÔºö‰∏çÂ∫îËØ•ÈáçÂêØ
    skipBackup: true,
    enableEnhancedGuardian: true,
    skipCursorLogin: true,
    resetCursorCompletely: false,
    resetVSCodeCompletely: false,
    aggressiveMode: false,       // ÂÖ≥ÈîÆÔºö‰∏çÂ∫îËØ•ÊøÄËøõ
    multiRoundClean: false,      // ÂÖ≥ÈîÆÔºö‰∏çÂ∫îËØ•Â§öËΩÆ
    extendedMonitoring: false,
    usePowerShellAssist: false,  // ÂÖ≥ÈîÆÔºö‰∏çÂ∫îËØ•Áî®PS
    intelligentMode: true,
    cleanCursor: false,          // ÂÖ≥ÈîÆÔºö‰∏çÂ∫îËØ•Ê∏ÖÁêÜCursor
    cleanVSCode: false
  };
  
  console.log("üìä Êô∫ËÉΩÊ∏ÖÁêÜÂèÇÊï∞È™åËØÅÔºö");
  Object.entries(intelligentOptions).forEach(([key, value]) => {
    const shouldBeFalse = [
      'deepClean', 'cleanCursorExtension', 'autoRestartCursor', 
      'resetCursorCompletely', 'resetVSCodeCompletely', 'aggressiveMode',
      'multiRoundClean', 'extendedMonitoring', 'usePowerShellAssist',
      'cleanCursor', 'cleanVSCode'
    ];
    
    if (shouldBeFalse.includes(key) && value === true) {
      console.log(`‚ùå ${key}: ${value} - Êô∫ËÉΩÊ®°Âºè‰∏≠Â∫îËØ•‰∏∫false`);
    } else if (key === 'intelligentMode' && value !== true) {
      console.log(`‚ùå ${key}: ${value} - Â∫îËØ•‰∏∫true`);
    } else {
      console.log(`‚úÖ ${key}: ${value}`);
    }
  });
};

testIntelligentCleanup();
